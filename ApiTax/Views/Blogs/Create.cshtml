@model ApiTax.Entities.Blog

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Blog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BlogTagID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BlogTagID", null, htmlAttributes: new { @class = "form-control my-multi-select" })
                @Html.ValidationMessageFor(model => model.BlogTagID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TitleFa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleFa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TitleFa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TitleEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TitleEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentFa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null)
                {
                    <textarea name="ContentFa" id="ContentFa" class="form-control" data-provide="markdown" rows="15">@Model.ContentFa</textarea>
                }
                else
                {
                    <textarea name="ContentFa" id="ContentFa" class="form-control" data-provide="markdown" rows="15"></textarea>
                }

                @Html.ValidationMessageFor(model => model.ContentFa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null)
                {
                    <textarea name="ContentEn" id="ContentEn" class="form-control" data-provide="markdown" rows="15">@Model.ContentEn</textarea>
                }
                else
                {
                    <textarea name="ContentEn" id="ContentEn" class="form-control" data-provide="markdown" rows="15"></textarea>
                }
                @Html.ValidationMessageFor(model => model.ContentEn, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
